---
layout: post
title:      "Creating Goal Tracker"
date:       2018-04-15 21:29:56 -0400
permalink:  creating_goal_tracker
---


This project was fun and challenging. I spent more time on it than I expected. I got stuck in a few places but also got lost in the fun of adding and perfecting features that I thought would add to the project, which I was able to learn a lot from and become more familiar with Rails.

One of the spots that really threw me was my Category model. I wanted the user to have the ability to either choose from a list of categories or create a new category while filling out a form to create a new goal. I followed the "has many through forms" lesson and used collection_check_boxes to display the list of categories and then used a @goal.categories.build block to create a field for the user to create a new category. This created an issue that I ended up getting pretty stuck on. 

I realized that if I checked a category, leaving the "Create New Category" field blank, the new goal ended up with a blank, phantom category. From what I read, the blank, hidden field works well if you have single checkbox but has a "gotcha" if you're using an array of objects, like I was with categories.  I tried at one point to filter the params hash to reject a blank value, but this wasn't going to work because in this case, the value was a nested hash and I wasn't able to figure out a way to make the reject method look for this. At another point, I decided to give up on using collection_check_boxes and showed the check boxes using an iterator in the form, but this created the ugliness of still creating a blank object and having to add additional code to not display the blank field anywhere I displayed the categories. I almost let this go but after stepping away from it for a bit, it dawned on me to filter out creating a blank object in the setter method. This resolved the issue and I briefly felt like a genuis for finally coming up with a fix for this one.

I also struggled with setting up OmniAuth. I had actually thought I had it resolved already when I went to do some final testing before I recorded my video when I realized it had broken. I was getting an expired authorization token error trying to use a Facebook strategy. I researched this error for a while with no luck. I finally decided to switch to trying a Google strategy. This seemed more promising at first but I hit a dead end and also accidently wiped out a lot of what I needed for Devise to work. This felt like a really frustrating dead end until I realized I could just go back to my previous commit, resetting back to where I left off with Facebook. For the first time I could deep appreciate the frequent git commits I had gotten into the habit of.  I then decided to follow the video from Ari in the lessons where he uses a Github strategy. I still hit some stumbling blocks here where I kept getting a 404 error instead of a sign in page. I finally realized that it would work if I moved the app and secret IDs from my .env file to the actual Omniauth and Devise pages. I would like to learn how to make the .env file work but when I finally saw the Github login page, I was extremely grateful and ready to move on.

The rest of the project pretty flowed well for me, I enjoyed seeing the app come together, thinking of new features that would enhance the user experience and figuring out how to create them. It was a fun process in this sense and showed me I could get lost in coding Rails. This felt like reinforcement in choosing this career path, time flies when you're having fun.
